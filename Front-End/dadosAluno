<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Painel do Aluno</title>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap");
      :root {
        --azul:#002979;
        --bordo:#c0cfff;
      }
      *{ box-sizing:border-box; }
      body {
        margin:0;
        font-family: "Roboto Condensed", Arial, sans-serif;
        font-weight: 900;
        min-height:100vh;
        display:flex;
        justify-content:center;
        align-items:flex-start;
        background: radial-gradient(1100px 500px at 10% 0%, #e7ecff 0, #c9d5ff 40%, #9fb6ff 70%, #7aa0ff 100%);
      }
      .container {
        display:block;
        background:white;
        border-radius:15px;
        box-shadow: 0 4px 10px rgba(0,0,0,.5);
        width:96vw;
        margin-top:6vh;
        padding:18px 16px 26px;
        border: 8px solid #0a45d6;
        outline: 8px solid #1946d0;
        outline-offset:-16px;
      }
      .header {
        display:flex;
        align-items:center;
        gap:16px;
        padding:4px 8px 18px;
      }
      .avatar {
        width:70px;
        height:70px;
        border-radius:50%;
        border:3px solid var(--bordo);
        box-shadow: 0 3px 6px rgba(0,0,0,.2);
        object-fit:cover;
        background:#f4f6ff;
      }
      h1{
        margin:0;
        font-size:1.8rem;
        font-weight:900;
      }
      /* ROOT BAR (abas) */
      .rootbar {
        display:flex;
        gap:8px;
        margin:0 8px 12px;
        flex-wrap:wrap;
      }
      .tab-btn {
        appearance:none;
        border:1px solid #b9c7ff;
        background:#f9f9ff;
        color:#000;
        padding:10px 14px;
        border-radius:8px;
        font-weight:800;
        cursor:pointer;
      }
      .tab-btn.active {
        background:#354fdf;
        color:#fff;
        border-color:#354fdf;
      }
      .frame {
        border:1px solid var(--bordo);
        border-radius:10px;
        padding:12px;
        min-height:280px;
        background: #fff;
        box-shadow: inset 0 0 0 1px #e9eeff;
      }
      .dados-grid {
        display:grid;
        grid-template-columns: 260px 1fr;
        gap:8px 12px;
        align-items:center;
        max-width:720px;
      }
      .label { font-size:1rem; font-weight:800; color:#111;}
      .value {
        border:1px solid #000;
        border-radius:6px;
        padding:6px 10px;
        min-height:28px;
        font-weight:600;
      }
      table {
        width:100%;
        border-collapse:collapse;
        margin-top:6px;
      }
      th, td {
        border: 1px solid #000;
        padding:8px 10px;
        text-align:left;
        font-weight:700;
      }
      th { background:#f0f3ff; }
      .upload-area {
        display:flex;
        flex-direction:column;
        align-items:center;
        gap:12px;
        margin:8px 0 12px;
      }
      .upload-area button{
        border:0; background:#2147e6; color:#fff; border-radius:8px; padding:8px 12px;
        font-weight:800; cursor:pointer; box-shadow:3px 5px 8px rgba(0,0,0,.2);
      }
      .note{font-weight:700; color:#333; margin:8px 0;}
      .hidden { display:none; }
      /* mobile */
      @media (max-width:820px){
        .dados-grid{ grid-template-columns:1fr; }
        .container{ width:98vw; }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="header">
        <img id="avatar" class="avatar" alt="Foto do aluno"/>
        <h1 id="nomeAluno">Nome do Aluno</h1>
      </div>

      <div class="rootbar">
        <button class="tab-btn active" data-tab="dados">DADOS PESSOAIS</button>
        <button class="tab-btn" data-tab="notas">VISUALIZAR NOTAS</button>
        <button class="tab-btn" data-tab="alertas">VISUALIZAR ALERTAS</button>
        <button class="tab-btn" data-tab="entregas">ENTREGAS</button>
      </div>

      <div id="tab-dados" class="frame">
        <div class="dados-grid" id="dadosGrid">
          <!-- preenchido via JS -->
        </div>
      </div>

      <div id="tab-notas" class="frame hidden">
        <table id="tabelaNotas">
          <thead>
            <tr>
              <th>DISCIPLINAS</th>
              <th>Nota 1</th>
              <th>Nota 2</th>
              <th>Nota 3</th>
              <th>Nota 4</th>
              <th>Nota 5</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>

      <div id="tab-alertas" class="frame hidden">
        <table id="tabelaAlertas">
          <thead>
            <tr><th style="width:30%">ASSUNTO</th><th>ALERTA</th></tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>

      <div id="tab-entregas" class="frame hidden">
        <div class="upload-area">
          <span class="note">Upload de Documentos</span>
          <input type="file" id="arquivoEntrega" />
          <button id="btnEnviarEntrega">Enviar</button>
        </div>
        <table id="tabelaEntregas">
          <thead>
            <tr><th style="width:30%">ENTREGAS</th><th>DOCUMENTO</th></tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
    </div>

    <script>
      const API = 'http://localhost:3000';
      const urlParams = new URLSearchParams(window.location.search);
      const alunoId = urlParams.get('id') || 1;

      // Abas
      document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', () => {
          document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
          btn.classList.add('active');
          const tab = btn.dataset.tab;
          document.querySelectorAll('.frame').forEach(f => f.classList.add('hidden'));
          document.getElementById('tab-' + tab).classList.remove('hidden');
        });
      });

      async function fetchJSON(path){
        const r = await fetch(path);
        if(!r.ok) throw new Error('Erro ao buscar ' + path);
        return r.json();
      }

      function renderDados(dados){
        document.getElementById('nomeAluno').textContent = dados.nome;
        const avatar = document.getElementById('avatar');
        if(dados.fotoBase64){
          avatar.src = 'data:' + (dados.fotoMime || 'image/jpeg') + ';base64,' + dados.fotoBase64;
        }else{
          avatar.src = 'https://cdn-icons-png.flaticon.com/512/685/685655.png';
        }
        const map = [
          ['Data de Nascimento', dados.data_nascimento],
          ['Contato', dados.contato],
          ['CPF', dados.cpf],
          ['RG', dados.rg],
          ['Cidade', dados.cidade],
          ['Endereço', dados.endereco],
          ['Estado Civil', dados.estado_civil],
          ['Sexo', dados.sexo],
          ['Nome do pai', dados.nome_pai],
          ['Nome da mãe', dados.nome_mae],
        ];
        const grid = document.getElementById('dadosGrid');
        grid.innerHTML = map.map(([k,v]) => 
          `<div class="label">${k}</div><div class="value">${v ?? ''}</div>`
        ).join('');
      }

      function renderNotas(notas){
        const tbody = document.querySelector('#tabelaNotas tbody');
        tbody.innerHTML = notas.map(n => `
          <tr>
            <td>${n.disciplina}</td>
            <td>${n.nota1 ?? ''}</td>
            <td>${n.nota2 ?? ''}</td>
            <td>${n.nota3 ?? ''}</td>
            <td>${n.nota4 ?? ''}</td>
            <td>${n.nota5 ?? ''}</td>
          </tr>
        `).join('');
      }

      function renderAlertas(alertas){
        const tbody = document.querySelector('#tabelaAlertas tbody');
        if(!alertas.length){
          tbody.innerHTML = '<tr><td colspan="2">Sem alertas.</td></tr>';
          return;
        }
        tbody.innerHTML = alertas.map(a => `
          <tr>
            <td>${a.assunto}</td>
            <td>${a.alerta}</td>
          </tr>
        `).join('');
      }

      function renderEntregas(lista){
        const tbody = document.querySelector('#tabelaEntregas tbody');
        if(!lista.length){
          tbody.innerHTML = '<tr><td colspan="2">Nenhuma entrega enviada.</td></tr>';
          return;
        }
        tbody.innerHTML = lista.map(e => {
          const href = e.arquivoBase64 ? 'data:'+ e.mime +';base64,'+ e.arquivoBase64 : '#';
          const name = e.titulo || e.filename || 'Documento';
          return \`
            <tr>
              <td>\${name}</td>
              <td><a href="\${href}" download="\${name}">Baixar</a></td>
            </tr>\`;
        }).join('');
      }

      async function carregar(){
        try{
          const dados = await fetchJSON(\`\${API}/aluno/\${alunoId}\`);
          renderDados(dados);

          const notas = await fetchJSON(\`\${API}/aluno/\${alunoId}/notas\`);
          renderNotas(notas);

          const alertas = await fetchJSON(\`\${API}/aluno/\${alunoId}/alertas\`);
          renderAlertas(alertas);

          const entregas = await fetchJSON(\`\${API}/aluno/\${alunoId}/entregas\`);
          renderEntregas(entregas);
        }catch(err){
          console.error(err);
          alert('Não foi possível carregar os dados. Verifique se o backend está rodando na porta 3000.');
        }
      }

      // Upload de entrega
      document.getElementById('btnEnviarEntrega').addEventListener('click', async () => {
        const file = document.getElementById('arquivoEntrega').files[0];
        if(!file){ alert('Selecione um arquivo.'); return; }
        const form = new FormData();
        form.append('arquivo', file);
        form.append('titulo', file.name);
        const r = await fetch(\`\${API}/aluno/\${alunoId}/entregas\`, { method:'POST', body:form });
        if(!r.ok){ alert('Falha ao enviar.'); return; }
        await carregar();
        document.getElementById('arquivoEntrega').value = '';
      });

      carregar();
    </script>
  </body>
</html>
